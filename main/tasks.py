from celery import shared_task
from .models import Reminder
from .utils import send_telegram_message

@shared_task(bind=True)
def send_reminder(self, reminder_id):
    print(f"üöÄ [Celery] –°—Ç–∞—Ä—Ç –∑–∞–¥–∞—á–∏ send_reminder –¥–ª—è reminder_id={reminder_id}")
    try:
        reminder = Reminder.objects.get(id=reminder_id)
        task = reminder.task

        chat_id = None
        if hasattr(task.user, "profile"):
            chat_id = task.user.profile.telegram_chat_id

        if not chat_id:
            print("‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç chat_id, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            return "NO_CHAT_ID"

        message = f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!\n\n–ó–∞–¥–∞—á–∞: {task.title}"
        if task.due_date:
            message += f"\n–°—Ä–æ–∫: {task.due_date.strftime('%d.%m.%Y %H:%M')}"

        print(f"üì© –û—Ç–ø—Ä–∞–≤–∫–∞: {message} ‚Üí {chat_id}")
        send_telegram_message(message, chat_id)

        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        return "OK"

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ send_reminder: {e}")
        raise
